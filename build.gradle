
// -- default build ---------------------------------------------------------------------------------------------------
apply plugin: 'eclipse'
apply plugin: 'findbugs'
apply plugin: 'java'

sourceCompatibility = 1.5

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'junit', name: 'junit-dep', version: '4.8.2' /* provided scope */
    testCompile group: 'org.easytesting', name: 'fest-assert-core', version: '2.+'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.9.+'
}

/*
task wrapper(type: Wrapper) {
    gradleVersion = '1.4'
}
*/
task jenkinsTest{
    // required due to jenkins fails if test output is not up to date :(
    // Solution found on http://www.practicalgradle.org/blog/2011/06/incremental-tests-with-jenkins/
    inputs.files test.outputs.files
    doLast{
        def timestamp = System.currentTimeMillis()
        test.testResultsDir.eachFile { it.lastModified = timestamp }
    }
}
 
build.dependsOn(jenkinsTest)


// -- build and publish artifacts -------------------------------------------------------------------------------------

apply plugin: 'maven'
apply plugin: 'signing'

group = 'com.tngtech.java'
version = '1.2.1-SNAPSHOT'

task javadocJar(type: Jar, dependsOn: javadoc) {
    from 'build/docs/javadoc'
    classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

findbugs {
    ignoreFailures = true
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}


signing {
    // requires gradle.properties, see http://www.gradle.org/docs/current/userguide/signing_plugin.html
    sign configurations.archives
}

tasks.withType(org.gradle.plugins.signing.Sign)*.onlyIf({ gradle.taskGraph.hasTask("uploadArchives") })

if (!hasProperty('sonatypeUsername')) {
	ext.sonatypeUsername = ''
}
if (!hasProperty('sonatypePassword')) {
	ext.sonatypePassword = ''
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                // username and password from gradle.properties
                authentication(userName: sonatypeUsername, password: sonatypePassword )
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword )
            }

            pom.project {
                name 'junit-dataprovider'
                packaging 'jar'
                description 'A TestNG like dataprovider runner for JUnit'
                url 'https://github.com/TNG/junit-dataprovider'

                scm {
                    url 'scm:git@github.com:TNG/junit-dataprovider.git'
                    connection 'scm:git@github.com:TNG/junit-dataprovider.git'
                    developerConnection 'scm:git@github.com:TNG/junit-dataprovider.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'lepokle'
                        name 'Leo von Klenze'
                    }
                    developer {
                        id 'aaschmid'
                        name 'Andreas Schmid'
                    }
                }
            }
        }
    }
}
